import Team from '../models/TeamModel.js'
import asyncHandler from 'express-async-handler'
import generateToken from '../utils/generateTokens.js'
const getTeam = asyncHandler(async (req,res)=>{
    const team = await Team.find()
    res.json(team)
})

const updateTeam = asyncHandler(async (req,res)=>{
   // console.log(req.body)
    const team = await Team.findOne({email:req.user.email})
    if(team){
        team.firstName = req.body.firstName || team.firstName
        team.lastName = req.body.lastName || team.lastName
        team.email = req.body.email || team.email
        team.photo = req.body.Img || team.photo
        team.role = req.body.role || team.role
        team.FBHandle = req.body.facebookHandle || team.FBHandle
        team.TwitterHandle = req.body.twitterHandle || team.TwitterHandle
        team.LinkedInHandle = req.body.linkedInHandle || team.LinkedInHandle
        team.githubHandle = req.body.githubHandle || team.githubHandle
        team.About = req.body.about || team.About
        const updatedTeam = await team.save()
        res.json({
            _id:updatedTeam._id,
            firstName:updatedTeam.firstName,
            lastName:updatedTeam.lastName,
            email:updatedTeam.email,
            role:updatedTeam.role,
            photo:updatedTeam.photo,
            FBHandle:updatedTeam.facebookHandle,
            TwitterHandle:updatedTeam.twitterHandle,
            LinkedInHandle:updatedTeam.linkedInHandle,
            githubHandle:updatedTeam.githubHandle,
            isAdmin : updatedTeam.isAdmin,
            token : generateToken(updatedTeam._id), // token is generated by using a custom function and jsonwebtoken library. The custom function is available is utils/generatetokens.js
        })
    }
    else{
        //console.log(req.body)
        const teamData ={firstName: req.body.firstName,
        lastName :req.body.lastName,
        email : req.body.email, 
        photo : req.body.Img || null,
        role :req.body.role||null,
        FBHandle :req.body.facebookHandle || null,
        TwitterHandle : req.body.twitterHandle || null,
        LinkedInHandle : req.body.linkedInHandle || null,
        githubHandle : req.body.githubHandle || null,
        About: req.body.about || null,
        }
        const team = await Team.create(teamData)
        if(!team){
            res.status("500")
            throw new Error('Bad Response')
        }
    }
})


export {getTeam,updateTeam} 